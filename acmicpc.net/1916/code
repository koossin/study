#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int main() {
    ios::sync_with_stdio(false);
	cin.tie(0);

    int n, m;
    cin >> n >> m;

    //v[start] = {des, cost}
    vector<vector<pair<int, int>>> v(n + 1); //1~n 정류장

    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        v[a].push_back({b,c});
    }
    int start, target; //목표 위치
    cin >> start >> target;

    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<>> pq;
    vector<int> dist(n+1, 1e9);
    
    dist[start] = 0;
    pq.push({0, start});

    while(!pq.empty()) {
        int cur_dist = pq.top().first;
        int cur_pos = pq.top().second;
        pq.pop();

        if (cur_dist > dist[cur_pos]) 
            continue;

        for(int i = 0; i < v[cur_pos].size(); i++) {
            int next_pos = v[cur_pos][i].first;
            int next_dist = v[cur_pos][i].second;

            if(dist[next_pos] > cur_dist + next_dist) {
                dist[next_pos] = cur_dist + next_dist;
                pq.push({dist[next_pos], next_pos});
            }

        }

    }

    cout << dist[target];

    return 0;
}
