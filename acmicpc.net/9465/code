#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int sticker(int n) {
    int result = 0;
    vector<vector<int>> dp(2, vector<int>(n + 1));
    vector<vector<int>> cost(2, vector<int>(n + 1));

    for(int i = 0; i < 2; i++) {
        for(int j = 1; j <= n; j++) {
            cin >> cost[i][j];
        }
    }

    if(n == 1) {
        return max(cost[0][1], cost[1][1]);
    }
    
    dp[0][1] = cost[0][1];
    dp[1][1] = cost[1][1];
    dp[0][2] = cost[0][2] + dp[1][1]; 
    dp[1][2] = cost[1][2] + dp[0][1];
    for(int i = 3; i <= n; i++) {
        for(int j = 0; j < 2; j++) {
            if(j == 0) {
                dp[j][i] = cost[j][i] + max(dp[j+1][i-1], dp[j+1][i-2]);
            }
            else if(j == 1) {
                dp[j][i] = cost[j][i] + max(dp[j-1][i-1], dp[j-1][i-2]);
            }
        }
    }
    
    return max(dp[0][n], dp[1][n]);
}

int main() {
    ios::sync_with_stdio(false);
	cin.tie(0);

    int t;
    cin >> t;
    
    for(int i = 0; i < t; i++) {
        int n;
        cin >> n;
        cout << sticker(n) << "\n";
    }
    
    return 0;
}
