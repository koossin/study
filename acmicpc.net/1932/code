#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    ios::sync_with_stdio(false);
	cin.tie(0);

    int n;
    cin >> n;
    vector<vector<int>> cost(n + 1, vector<int>(n + 1));
    vector<vector<int>> dp(n + 1, vector<int>(n + 1));

    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            cin >> cost[i][j];
        }
    }

    int result = 0;
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= i; j++) {
            if(j == 1) {
                dp[i][j] = cost[i][j] + dp[i - 1][j];
            }
            else if(j == i) {
                dp[i][j] = cost[i][j] + dp[i - 1][j - 1];
            }
            else {
                dp[i][j] = cost[i][j] + max(dp[i - 1][j], dp[i - 1][j - 1]);
            }
            if(result < dp[i][j])
                result = dp[i][j];
        }
    }

    cout << result;

    return 0;
}
