#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;


//size
int n;

//map
vector<vector<int>> pipe(16, vector<int>(16, 1));
//dp[x][y][last_shape] 0==->->, 1==->down 2==downdown
int dp[16][16][3];

int main() {
    ios::sync_with_stdio(false);
	cin.tie(0);

    //size input
    cin >> n;

    //map input
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            cin >> pipe[i][j];
        }
    }

    //dp init
    dp[0][0][0] = 0;
    dp[0][1][0] = 1;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < n; j++) {
            if(pipe[i][j])
                continue;

            if(j+1 < n && !pipe[i][j+1])
                dp[i][j+1][0] += dp[i][j][0] + dp[i][j][1];
            if(i+1 < n && !pipe[i+1][j])
                dp[i+1][j][2] += dp[i][j][1] + dp[i][j][2];
            if(i+1 < n && j+1 < n && !pipe[i+1][j] && !pipe[i][j+1] && !pipe[i+1][j+1])
                dp[i+1][j+1][1] += dp[i][j][0] + dp[i][j][1] + dp[i][j][2];
        }
    }

    cout << dp[n-1][n-1][0] + dp[n-1][n-1][1] + dp[n-1][n-1][2];
   
    return 0;
}
