#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int main() {
    ios::sync_with_stdio(false);
	cin.tie(0);

    string str1, str2;
    cin >> str1 >> str2;
    int size1 = str1.size();
    int size2 = str2.size();
    int result = -1;

    vector<vector<int>> dp(size1 + 1, vector<int>(size2 + 1));

    //init 0
    for(int i = 0; i <= size1; i++)
        dp[i][0] = 0;
    for(int i = 0; i <= size2; i++)
        dp[0][i] = 0;

    //dp
    for(int i = 1; i <= size1; i++) {
        for(int j = 1; j <= size2; j++) {
            if(str1[i - 1] == str2[j - 1]) {
                dp[i][j] = dp[i-1][j-1] + 1;
            }
            else {
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }

            if(result < dp[i][j])
                result = dp[i][j];
        }
    }

    cout << result;

    return 0;
}
